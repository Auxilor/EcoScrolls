# The ID of the scroll is the name of the .yml file,
# for example coins_on_kill.yml has the ID of coins_on_kill
# You can place scrolls anywhere in this folder,
# including in subfolders if you want to organize your scroll configs
# _example.yml is not loaded.

# The name of the scroll
name: "&cHot Potato Book"

max-level: 10
max-uses: 1

item:
  item: book unbreaking:1 hide_enchants
  name: "&cHot Potato Book"
  lore:
    - "&7When inscribed on armor, grants"
    - "&f+2 %ecoskills_defense_name% &7and &f+1 %ecoskills_health_name%&7."
    - ""
    - "&7When inscribed to weapons, grants"
    - "&f+2 %ecoskills_strength_name% &7and &f+4 %ecoskills_crit_damage_name%&7."
    - ""
    - "&7This can be inscribed up to &a10 &7times"
    - "&7on an item!"

  craftable: false
  recipe: [ ]

inscription:
  conditions: [ ]

  effects: [ ]

  price:
    value: 100
    type: coins
    display: "&e%value% coins"

  price-level-multiplier: "1 + %level% * 0.5"

  drag-and-drop: false
  inscription-table: true

targets:
  - sword
  - axe
  - armor

placeholders:
  # For EcoItems items, use %ecoscrolls_scroll_hot_potato_book:defense% in lore
  defense: "&8(&e+{^{%level% * 2}}&8)"
  # Same as above, but for health / strength / crit_damage
  health: "&8(&e+{^{%level%}}&8)"
  strength: "&8(&e+{^{%level% * 2}}&8)"
  crit_damage: "&8(&e+{^{%level% * 4}}&8)"

effects:
  # Armor effects
  - id: add_stat
    args:
      stat: defense
      amount: "%level% * 2"
    conditions:
      - id: in_slot
        args:
          slot: armor
  - id: add_stat
    args:
      stat: health
      amount: "%level%"
    conditions:
      - id: in_slot
        args:
          slot: armor

  # Weapon effects
  - id: add_stat
    args:
      stat: strength
      amount: "%level% * 2"
    conditions:
      - id: in_slot
        args:
          slot: mainhand
  - id: add_stat
    args:
      stat: crit_damage
      amount: "%level% * 4"
    conditions:
      - id: in_slot
        args:
          slot: mainhand

conditions: [ ]
